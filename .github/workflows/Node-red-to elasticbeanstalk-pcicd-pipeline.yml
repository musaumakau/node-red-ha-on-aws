#-----------------------------------------------------------------------------------------
#
#GitHub Action Workflow to Deploy Node Red to AWS ElasticBeanstalk                      -
#
#-----------------------------------------------------------------------------------------
name: CI-CD-Pipeline-to-AWS-ElasticBeanstalk
env:
  EB_PACKAGE_S3_BUCKET_NAME : "elasticbeanstalk-eu-west-1-830621850046"
  EB_APPLICATION_NAME       : "Node-red"
  EB_ENVIRONMENT_NAME       : "developement"
  AWS_REGION_NAME           : "eu-west-1"
  DEPLOY_PACKAGE_NAME       : "node-red-on-elastic-beanstalk.zip"
  #DEPLOY_PACKAGE_NAME       : "Node-red-${{ github.sha }}.zip"#

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  my_ci_pipeline:
   runs-on: ubuntu-latest
   strategy:
    matrix:
      os: [ubuntu-latest]
      node-version: [16.x]
   steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install Dependencies
      run: |
       npm install
       npm install -g gulp-cli
       
    - name: Build
      run: |
       gulp minify
       gulp build
       
    - name: Create ZIP deployment package
      run : |
       cd dist
       zip -r ${{ env.DEPLOY_PACKAGE_NAME }} 
    - name: Configure my AWS Credentils
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id    : ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region           : ${{ env.AWS_REGION_NAME }}
    - name: Copy our Deployment package to S3 bucket
      run : |
       cd dist
       aws s3 cp dist/*.zip s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME}}/
    
         
    - name: Print a message on completion of CI Pipeline
      run : echo "CI Pipeline part finished successfully"


    
  my_cd_pipeline:
        runs-on: ubuntu-latest
        needs: [my_ci_pipeline]
       
        steps:
         - name: Configure my AWS Credentils
           uses: aws-actions/configure-aws-credentials@v1-node16
           with:
             aws-access-key-id    : ${{ secrets.AWS_ACCESS_KEY_ID }}
             aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
             aws-region           : ${{ env.AWS_REGION_NAME }}
         - name: Create new ElasticBeanstalk Applicaiton Version
           run : aws elasticbeanstalk create-application-version --region eu-west-1 --application-name ${{ env.EB_APPLICATION_NAME }}  --version-label v1 --description NoderedV1 --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" --auto-create-application 

         - name: Deploy our new Application Version
           run : aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "v1"
           
         - name: Print a message on completion of CD Pipeline
           run : echo "CD Pipeline part finished successfully"  
        
